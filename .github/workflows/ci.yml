name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: macos-latest

    env:
      CI: true  # To signal Lua scripts to handle CI-specific behavior

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Install Neovim and Lua via Homebrew
      - name: Install Neovim and Lua
        run: |
          brew update
          brew install neovim lua

      # 3. Set up Minimal Neovim Configuration
      - name: Set up Neovim Configuration
        run: |
          mkdir -p ~/.config/nvim
          echo "-- Minimal init.lua for CI" > ~/.config/nvim/init.lua
          echo "-- Add any necessary Neovim configurations here" >> ~/.config/nvim/init.lua

      # 4. Install Tungsten Plugin by Symlinking into Neovim's Plugin Directory
      - name: Install Tungsten Plugin
        run: |
          mkdir -p ~/.local/share/nvim/site/pack/plugins/start
          ln -s $GITHUB_WORKSPACE ~/.local/share/nvim/site/pack/plugins/start/tungsten

      # 5. Verify Tungsten Plugin Symlink
      - name: Verify Tungsten Plugin Installation
        run: |
          if [ ! -L ~/.local/share/nvim/site/pack/plugins/start/tungsten ]; then
            echo "‚ùå Tungsten plugin symlink not found."
            exit 1
          fi
          echo "‚úÖ Tungsten plugin symlink exists."

      # 6. List Installed Plugins (Debugging Step)
      - name: List Installed Plugins
        run: |
          echo "üì¶ Listing installed plugins in ~/.local/share/nvim/site/pack/plugins/start/:"
          ls -la ~/.local/share/nvim/site/pack/plugins/start/

      # 7. Run Tungsten Test Suite
      - name: Run Tungsten Test Suite
        run: |
          # Ensure logs directory exists
          mkdir -p logs
          # Run Neovim headlessly and execute the test suite
          nvim --headless -c "TungstenTestSuite all" -c "qa!"
        env:
          XDG_CONFIG_HOME: ~/.config  # Ensure Neovim uses the correct config

      # 8. Upload Test Logs
      - name: Upload Test Logs
        if: always()  # Ensure this step runs even if previous steps fail
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: logs/test_logs.txt

      # 9. Display Test Logs (Optional)
      - name: Display Test Logs
        if: always()
        run: |
          if [ -f logs/test_logs.txt ]; then
            echo "üìÑ === Test Logs ==="
            cat logs/test_logs.txt
            echo "üìÑ ================="
          else
            echo "‚ö†Ô∏è No test logs found."
          fi

